{"version":3,"file":"static/js/374.edf5325f.chunk.js","mappings":"gMAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAUN,EANsB,SAAAC,GAAS,OAC7BC,MAAM,mDAAD,OACgDD,EADhD,8CAEHL,GACAO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAJc,E,4CC0C/B,EA/CmB,WAAO,IAAD,EACvB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,QAAQC,IAAIH,GACZ,OAAkCI,EAAAA,EAAAA,UAASJ,GAA3C,eAAOR,EAAP,KAAkBa,EAAlB,KAEA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJlB,GACFmB,EAAcnB,GACXE,MAAK,SAAAC,GACJY,EAASZ,EAASiB,QACnB,IACAC,OAAM,SAAAC,GAAG,OAAIZ,QAAQa,MAAMD,EAAlB,GAEf,GAAE,CAACtB,IAQJ,OACE,4BACE,kBAAMwB,SARW,SAAAC,GACnBA,EAAEC,iBACFb,EAAaY,EAAEE,cAAcC,SAASC,MAAMC,OAE5CvB,EAAgB,CAAEC,MAAOR,GAC1B,EAGG,WACE,kBAAO+B,KAAK,QAAQC,KAAK,UACzB,mBAAQA,KAAK,SAAb,SAAsB,eAExB,wBACGlB,GACCA,EAAMmB,KAAI,SAAAC,GAAI,OACZ,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMtB,GAAvC,SACGkB,EAAKK,SAFKL,EAAKE,GADR,QAUvB,C","sources":["components/API/getFilmByName.jsx","pages/MoviesPage.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYmM4YTFmYzFjNTJkNDI2MzdiOWY0YzM4Y2YwMTE1ZiIsInN1YiI6IjY0MzczYzAzMWY3NDhiMDA3NzE1NWRjYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xP9IjysvP2DNJPfyp9LiVDmBl5Ma23Yd9KpANBssuVc',\n  },\n};\n\nconst getFilmByName = queryName =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${queryName}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => response.json());\n\nexport default getFilmByName;\n","import getFilmByName from 'components/API/getFilmByName';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { ListItem } from './HomePage.styled';\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  console.log(query);\n  const [queryName, setQueryName] = useState(query);\n\n  const [films, setFilms] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (queryName) {\n      getFilmByName(queryName)\n        .then(response => {\n          setFilms(response.results);\n        })\n        .catch(err => console.error(err));\n    }\n  }, [queryName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQueryName(e.currentTarget.elements.input.value);\n\n    setSearchParams({ query: queryName });\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input name=\"input\" type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films &&\n          films.map(film => (\n            <ListItem key={film.id}>\n              <Link to={`${film.id}`} state={{ from: location }}>\n                {film.title}\n              </Link>\n            </ListItem>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["options","method","headers","accept","Authorization","queryName","fetch","then","response","json","useSearchParams","searchParams","setSearchParams","query","get","console","log","useState","setQueryName","films","setFilms","location","useLocation","useEffect","getFilmByName","results","catch","err","error","onSubmit","e","preventDefault","currentTarget","elements","input","value","name","type","map","film","to","id","state","from","title"],"sourceRoot":""}